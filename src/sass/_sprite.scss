/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$partner-icon1-name: 'partner-icon1';
$partner-icon1-x: 33px;
$partner-icon1-y: 36px;
$partner-icon1-offset-x: -33px;
$partner-icon1-offset-y: -36px;
$partner-icon1-width: 16px;
$partner-icon1-height: 16px;
$partner-icon1-total-width: 222px;
$partner-icon1-total-height: 275px;
$partner-icon1-image: '../../images/sprite.png';
$partner-icon1: (33px, 36px, -33px, -36px, 16px, 16px, 222px, 275px, '../../images/sprite.png', 'partner-icon1', );
$partner-icon2-name: 'partner-icon2';
$partner-icon2-x: 69px;
$partner-icon2-y: 72px;
$partner-icon2-offset-x: -69px;
$partner-icon2-offset-y: -72px;
$partner-icon2-width: 16px;
$partner-icon2-height: 17px;
$partner-icon2-total-width: 222px;
$partner-icon2-total-height: 275px;
$partner-icon2-image: '../../images/sprite.png';
$partner-icon2: (69px, 72px, -69px, -72px, 16px, 17px, 222px, 275px, '../../images/sprite.png', 'partner-icon2', );
$partner-icon3-name: 'partner-icon3';
$partner-icon3-x: 0px;
$partner-icon3-y: 0px;
$partner-icon3-offset-x: 0px;
$partner-icon3-offset-y: 0px;
$partner-icon3-width: 13px;
$partner-icon3-height: 16px;
$partner-icon3-total-width: 222px;
$partner-icon3-total-height: 275px;
$partner-icon3-image: '../../images/sprite.png';
$partner-icon3: (0px, 0px, 0px, 0px, 13px, 16px, 222px, 275px, '../../images/sprite.png', 'partner-icon3', );
$partner-icon4-name: 'partner-icon4';
$partner-icon4-x: 105px;
$partner-icon4-y: 109px;
$partner-icon4-offset-x: -105px;
$partner-icon4-offset-y: -109px;
$partner-icon4-width: 17px;
$partner-icon4-height: 16px;
$partner-icon4-total-width: 222px;
$partner-icon4-total-height: 275px;
$partner-icon4-image: '../../images/sprite.png';
$partner-icon4: (105px, 109px, -105px, -109px, 17px, 16px, 222px, 275px, '../../images/sprite.png', 'partner-icon4', );
$slider-arrow-left-name: 'slider__arrow--left';
$slider-arrow-left-x: 142px;
$slider-arrow-left-y: 145px;
$slider-arrow-left-offset-x: -142px;
$slider-arrow-left-offset-y: -145px;
$slider-arrow-left-width: 30px;
$slider-arrow-left-height: 55px;
$slider-arrow-left-total-width: 222px;
$slider-arrow-left-total-height: 275px;
$slider-arrow-left-image: '../../images/sprite.png';
$slider-arrow-left: (142px, 145px, -142px, -145px, 30px, 55px, 222px, 275px, '../../images/sprite.png', 'slider__arrow--left', );
$slider-arrow-right-name: 'slider__arrow--right';
$slider-arrow-right-x: 192px;
$slider-arrow-right-y: 220px;
$slider-arrow-right-offset-x: -192px;
$slider-arrow-right-offset-y: -220px;
$slider-arrow-right-width: 30px;
$slider-arrow-right-height: 55px;
$slider-arrow-right-total-width: 222px;
$slider-arrow-right-total-height: 275px;
$slider-arrow-right-image: '../../images/sprite.png';
$slider-arrow-right: (192px, 220px, -192px, -220px, 30px, 55px, 222px, 275px, '../../images/sprite.png', 'slider__arrow--right', );
$partner-icon1-2x-name: 'partner-icon1-2x';
$partner-icon1-2x-x: 66px;
$partner-icon1-2x-y: 72px;
$partner-icon1-2x-offset-x: -66px;
$partner-icon1-2x-offset-y: -72px;
$partner-icon1-2x-width: 32px;
$partner-icon1-2x-height: 32px;
$partner-icon1-2x-total-width: 444px;
$partner-icon1-2x-total-height: 550px;
$partner-icon1-2x-image: '../images/sprite-2x.png';
$partner-icon1-2x: (66px, 72px, -66px, -72px, 32px, 32px, 444px, 550px, '../images/sprite-2x.png', 'partner-icon1-2x', );
$partner-icon2-2x-name: 'partner-icon2-2x';
$partner-icon2-2x-x: 138px;
$partner-icon2-2x-y: 144px;
$partner-icon2-2x-offset-x: -138px;
$partner-icon2-2x-offset-y: -144px;
$partner-icon2-2x-width: 32px;
$partner-icon2-2x-height: 34px;
$partner-icon2-2x-total-width: 444px;
$partner-icon2-2x-total-height: 550px;
$partner-icon2-2x-image: '../images/sprite-2x.png';
$partner-icon2-2x: (138px, 144px, -138px, -144px, 32px, 34px, 444px, 550px, '../images/sprite-2x.png', 'partner-icon2-2x', );
$partner-icon3-2x-name: 'partner-icon3-2x';
$partner-icon3-2x-x: 0px;
$partner-icon3-2x-y: 0px;
$partner-icon3-2x-offset-x: 0px;
$partner-icon3-2x-offset-y: 0px;
$partner-icon3-2x-width: 26px;
$partner-icon3-2x-height: 32px;
$partner-icon3-2x-total-width: 444px;
$partner-icon3-2x-total-height: 550px;
$partner-icon3-2x-image: '../images/sprite-2x.png';
$partner-icon3-2x: (0px, 0px, 0px, 0px, 26px, 32px, 444px, 550px, '../images/sprite-2x.png', 'partner-icon3-2x', );
$partner-icon4-2x-name: 'partner-icon4-2x';
$partner-icon4-2x-x: 210px;
$partner-icon4-2x-y: 218px;
$partner-icon4-2x-offset-x: -210px;
$partner-icon4-2x-offset-y: -218px;
$partner-icon4-2x-width: 34px;
$partner-icon4-2x-height: 32px;
$partner-icon4-2x-total-width: 444px;
$partner-icon4-2x-total-height: 550px;
$partner-icon4-2x-image: '../images/sprite-2x.png';
$partner-icon4-2x: (210px, 218px, -210px, -218px, 34px, 32px, 444px, 550px, '../images/sprite-2x.png', 'partner-icon4-2x', );
$slider-arrow-left-2x-name: 'slider__arrow--left-2x';
$slider-arrow-left-2x-x: 284px;
$slider-arrow-left-2x-y: 290px;
$slider-arrow-left-2x-offset-x: -284px;
$slider-arrow-left-2x-offset-y: -290px;
$slider-arrow-left-2x-width: 60px;
$slider-arrow-left-2x-height: 110px;
$slider-arrow-left-2x-total-width: 444px;
$slider-arrow-left-2x-total-height: 550px;
$slider-arrow-left-2x-image: '../images/sprite-2x.png';
$slider-arrow-left-2x: (284px, 290px, -284px, -290px, 60px, 110px, 444px, 550px, '../images/sprite-2x.png', 'slider__arrow--left-2x', );
$slider-arrow-right-2x-name: 'slider__arrow--right-2x';
$slider-arrow-right-2x-x: 384px;
$slider-arrow-right-2x-y: 440px;
$slider-arrow-right-2x-offset-x: -384px;
$slider-arrow-right-2x-offset-y: -440px;
$slider-arrow-right-2x-width: 60px;
$slider-arrow-right-2x-height: 110px;
$slider-arrow-right-2x-total-width: 444px;
$slider-arrow-right-2x-total-height: 550px;
$slider-arrow-right-2x-image: '../images/sprite-2x.png';
$slider-arrow-right-2x: (384px, 440px, -384px, -440px, 60px, 110px, 444px, 550px, '../images/sprite-2x.png', 'slider__arrow--right-2x', );
$spritesheet-width: 222px;
$spritesheet-height: 275px;
$spritesheet-image: '../../images/sprite.png';
$spritesheet-sprites: ($partner-icon1, $partner-icon2, $partner-icon3, $partner-icon4, $slider-arrow-left, $slider-arrow-right, );
$spritesheet: (222px, 275px, '../../images/sprite.png', $spritesheet-sprites, );
$retina-spritesheet-width: 444px;
$retina-spritesheet-height: 550px;
$retina-spritesheet-image: '../images/sprite-2x.png';
$retina-spritesheet-sprites: ($partner-icon1-2x, $partner-icon2-2x, $partner-icon3-2x, $partner-icon4-2x, $slider-arrow-left-2x, $slider-arrow-right-2x, );
$retina-spritesheet: (444px, 550px, '../images/sprite-2x.png', $retina-spritesheet-sprites, );

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
$partner-icon1-group-name: 'partner-icon1';
$partner-icon1-group: ('partner-icon1', $partner-icon1, $partner-icon1-2x, );
$partner-icon2-group-name: 'partner-icon2';
$partner-icon2-group: ('partner-icon2', $partner-icon2, $partner-icon2-2x, );
$partner-icon3-group-name: 'partner-icon3';
$partner-icon3-group: ('partner-icon3', $partner-icon3, $partner-icon3-2x, );
$partner-icon4-group-name: 'partner-icon4';
$partner-icon4-group: ('partner-icon4', $partner-icon4, $partner-icon4-2x, );
$slider-arrow-left-group-name: 'slider__arrow--left';
$slider-arrow-left-group: ('slider__arrow--left', $slider-arrow-left, $slider-arrow-left-2x, );
$slider-arrow-right-group-name: 'slider__arrow--right';
$slider-arrow-right-group: ('slider__arrow--right', $slider-arrow-right, $slider-arrow-right-2x, );
$retina-groups: ($partner-icon1-group, $partner-icon2-group, $partner-icon3-group, $partner-icon4-group, $slider-arrow-left-group, $slider-arrow-right-group, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
@mixin sprite-background-size($sprite) {
  $sprite-total-width: nth($sprite, 7);
  $sprite-total-height: nth($sprite, 8);
  background-size: $sprite-total-width $sprite-total-height;
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: nth($retina-group, 2);
  $retina-sprite: nth($retina-group, 3);
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
@mixin retina-sprites($retina-groups) {
  @each $retina-group in $retina-groups {
    $sprite-name: nth($retina-group, 1);
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}
